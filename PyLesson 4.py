# # Задание-1:
'''Реализовать скрипт, в котором должна быть предусмотрена функция расчета заработной платы сотрудника.
В расчете необходимо использовать формулу: (выработка в часах*ставка в час) + премия.
Для выполнения расчета для конкретных значений необходимо запускать скрипт с параметрами.'''

# from sys import argv
#
# file_name, work_hours, salary_per_hour, bonus = argv
#
# calc_salary = (int(work_hours) * int(salary_per_hour)) + int(bonus)
# print(calc_salary)

# # Задание-2:
'''
Представлен список чисел. Необходимо вывести элементы исходного списка, значения которых больше предыдущего элемента.
Подсказка: элементы, удовлетворяющие условию, оформить в виде списка. Для формирования списка использовать генератор.
Пример исходного списка: [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55].
Результат: [12, 44, 4, 10, 78, 123]
'''

# my_list = [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55]
# new_list = []
# i = 0
#
# for el in my_list:
#     if el > my_list[i - 1]:
#         new_list.append(el)
#     i += 1
#
# print(new_list)

#
# new_list = [el for el in my_list if el > my_list[i - 1]]
# print(new_list)




# # Задание-3:
'''Для чисел в пределах от 20 до 240 найти числа, кратные 20 или 21.
Необходимо решить задание в одну строку.
Подсказка: использовать функцию range() и генератор.'''

# my_list = [i for i in range(20, 240) if i % 20 == 0 or i % 21 == 0]
# print(my_list)




# # Задание-4:
# '''Представлен список чисел. Определить элементы списка, не имеющие повторений.
# Сформировать итоговый массив чисел, соответствующих требованию.
# Элементы вывести в порядке их следования в исходном списке.
# Для выполнения задания обязательно использовать генератор.'''
# my_list = [1, 2, 2, 3, 4, 4, 4, 5]
# new_list = [elem for elem in my_list if my_list.count(elem) < 2]
# print(new_list)



# # Задание-5:
# '''Реализовать формирование списка, используя функцию range() и возможности генератора.
# В список должны войти четные числа от 100 до 1000 (включая границы).
# Необходимо получить результат вычисления произведения всех элементов списка.
# Подсказка: использовать функцию reduce().
# from functools import reduce
# my_list = [i for i in range(100, 1001) if i % 2 == 0]
# print(my_list)
#
# def sum_list(prev_el, el):
#     return prev_el + el
#
# print(reduce(sum_list, my_list))



# # Задание-6:
# '''Реализовать два небольших скрипта:
# а) бесконечный итератор, генерирующий целые числа, начиная с указанного,
# б) бесконечный итератор, повторяющий элементы некоторого списка, определенного заранее.
# Подсказка: использовать функцию count() и cycle() модуля itertools.'''
# from itertools import count, cycle
# # a)
# def generator_int(start_int, stop_int):
#     for i in count(start_int):
#         if i > stop_int:
#             break
#         else:
#             print(i)
#
# def generator_loop(number_loop, elem):
#     с = number_loop
#     for el in cycle(elem):
#         if с > 20:
#             break
#         print(el)
#         с += 1
#
# generator_loop(6, 'Hello')
#
#

def my_factorial(n):
    res = 1
    for i in range(1, n+1):
        res *= i
    return res

print(my_factorial(10))

from math import factorial
print(factorial(10))
